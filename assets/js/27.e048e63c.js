(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{276:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"内存控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存控制"}},[t._v("#")]),t._v(" 内存控制")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置老生代内存空间的最大值")]),t._v("\nnode --max-old-space-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1700")]),t._v(" test.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置新生代内存空间的最大值")]),t._v("\nnode --max-new-space-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" test.js\n")])])]),a("p",[t._v("V8 的内存没有办法根据使用情况自动扩充，当内存分配过程中超过极限值时，就会引起进程出错。")]),t._v(" "),a("p",[t._v("变量的主动释放")]),t._v(" "),a("p",[t._v("如果变量是全局变量（通过 "),a("code",[t._v("var")]),t._v(" 声明或定义在 "),a("code",[t._v("global")]),t._v(" 变量上），由于全局作用域需要直到进程退出才能释放，此时将导致引用的对象常驻内存（常驻在老生代中）。如果需要释放常驻内存的对象，可以通过 "),a("code",[t._v("delete")]),t._v(" 操作来删除引用关系。或者将变量重新赋值，让旧对象脱离引用关系。在接下来的老生代内存清除和整理的过程中，会被回收释放。")]),t._v(" "),a("p",[t._v("🌰 "),a("strong",[t._v("标准示例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am global object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 'I am global object'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或重新赋值")]),t._v("\nglobal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或 null")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n")])])]),a("p",[t._v("同样，如果在非全局作用域中，想主动释放变量引用的对象，也可以通过这样的方式。虽然 "),a("code",[t._v("delete")]),t._v(" 操作和重新赋值具有相同的效果，但是在 V8 中通过 "),a("code",[t._v("delete")]),t._v(" 删除对象的属性有可能干扰 V8 的优化，所以通过赋值方式解除引用更好。")])])}),[],!1,null,null,null);s.default=e.exports}}]);