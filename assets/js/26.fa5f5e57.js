(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{305:function(v,_,l){"use strict";l.r(_);var e=l(0),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"运行机制"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#运行机制"}},[v._v("#")]),v._v(" 运行机制")]),v._v(" "),l("p",[v._v("libuv 架构")]),v._v(" "),l("ul",[l("li",[v._v("Network I/O\n"),l("ul",[l("li",[v._v("TCP")]),v._v(" "),l("li",[v._v("UDP")]),v._v(" "),l("li",[v._v("TTY")]),v._v(" "),l("li",[v._v("Pipe")])])]),v._v(" "),l("li",[v._v("uv_io_t")]),v._v(" "),l("li",[v._v("epoll")]),v._v(" "),l("li",[v._v("kqueue")]),v._v(" "),l("li",[v._v("event ports")]),v._v(" "),l("li",[v._v("IOCP")]),v._v(" "),l("li",[v._v("File I/O")]),v._v(" "),l("li",[v._v("DNS Ops")]),v._v(" "),l("li",[v._v("User code")]),v._v(" "),l("li",[v._v("Thread Pool 线程池")])]),v._v(" "),l("p",[v._v("NodeJS 是单进程单线程的，Libuv 并不是单线程，它依赖一个伴随Node.js 启动而初始化的线程池来实现。")])])}),[],!1,null,null,null);_.default=t.exports}}]);