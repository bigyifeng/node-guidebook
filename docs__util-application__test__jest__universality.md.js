(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[97],{PFRt:function(e,n,a){"use strict";a.r(n);var t=a("q1tI"),l=a.n(t),c=(a("B2uJ"),a("+su7"),a("qOys")),o=a.n(c);a("5Yjd");n["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h1",{id:"\u901a\u7528"},l.a.createElement("a",{"aria-hidden":"true",href:"#\u901a\u7528"},l.a.createElement("span",{className:"icon icon-link"})),"\u901a\u7528"),l.a.createElement("p",null,"\u7b80\u5355\u6d4b\u8bd5\u7ed3\u6784"),l.a.createElement(o.a,{code:"function sum(a, b) {\n  return a + b;\n}\n\nit('Add 1 to 2 equal 3', () => {\n  expect(sum(1, 2)).toBe(3);\n});\n",lang:"js"}),l.a.createElement("p",null,"\u5f02\u6b65\u7684\u6d4b\u8bd5\u7ed3\u6784"),l.a.createElement(o.a,{code:"async function sum(a, b) {\n  return a + b;\n}\n\nit('adds 1 + 2 to equal 3', async () => {\n  const total = await sum(1, 2);\n  expect(total).toBe(3);\n});\n",lang:"js"}),l.a.createElement("p",null,"Mock Function \u7ed3\u6784"),l.a.createElement("ol",null,l.a.createElement("li",null,l.a.createElement("code",null,"jest.fn")," \u7528\u4e8e\u7a7f\u4ef6\u4e00\u4e2a Mock Function"),l.a.createElement("li",null,"mockCallback.mock \u53ef\u4ee5\u8bbf\u95ee Mock Function \u7684\u72b6\u6001")),l.a.createElement(o.a,{code:"function forEach(items, callback) {\n  for (let index = 0; index < items.length; index++) {\n    callback(items[index]);\n  }\n}\n\nconst mockCallback = jest.fn(x => 42 + x);\nforEach([0, 1], mockCallback);\n",lang:"js"})))}}}]);