(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[54],{N0Kb:function(e,n,a){"use strict";a.r(n);var l=a("q1tI"),t=a.n(l),c=(a("B2uJ"),a("+su7"),a("qOys")),r=a.n(c);a("5Yjd");n["default"]=function(){return t.a.createElement(t.a.Fragment,null,t.a.createElement("div",{className:"markdown"},t.a.createElement("h1",{id:"\u9a8c\u8bc1-validation"},t.a.createElement("a",{"aria-hidden":"true",href:"#\u9a8c\u8bc1-validation"},t.a.createElement("span",{className:"icon icon-link"})),"\u9a8c\u8bc1 Validation"),t.a.createElement("p",null,"\u5728\u8fdb\u884c\u6570\u636e\u4fdd\u5b58\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 validation \u914d\u7f6e\u9879\uff0c\u4ee5\u9632\u6b62\u5c06\u6570\u636e\u5b8c\u6574\u6027\u7834\u574f\u3002"),t.a.createElement("p",null,"\u5982\u679c\u4f60\u8981\u4f7f\u7528\u9a8c\u8bc1\uff0c\u6ce8\u610f\u51e0\u4e2a\u70b9\uff1a"),t.a.createElement("ul",null,t.a.createElement("li",null,"\u9a8c\u8bc1\u5b9a\u4e49\u4e8e SchemaType"),t.a.createElement("li",null,"\u9a8c\u8bc1\u662f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u5b83\u9ed8\u8ba4\u4f5c\u4e3a ",t.a.createElement("code",null,"pre('save')")," \u94a9\u5b50\u6ce8\u518c\u5728 schema \u4e0a"),t.a.createElement("li",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",t.a.createElement("code",null,"doc.validate(callback)")," \u6216 ",t.a.createElement("code",null,"doc.validateSync()")," \u624b\u52a8\u9a8c\u8bc1"),t.a.createElement("li",null,"\u9a8c\u8bc1\u5668\u4e0d\u5bf9\u4e3a\u5b9a\u4e49\u7684\u503c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u552f\u4e00\u4f8b\u5916\u662f ",t.a.createElement("code",null,"required")," \u9a8c\u8bc1\u5668"),t.a.createElement("li",null,"\u9a8c\u8bc1\u662f\u5f02\u6b65\u9012\u5f52\u7684\u3002\u5f53\u4f60\u8c03\u7528 ",t.a.createElement("code",null,"Model#save"),"\uff0c\u5b50\u6587\u6863\u9a8c\u8bc1\u4e5f\u4f1a\u6267\u884c\uff0c\u51fa\u9519\u7684\u8bdd ",t.a.createElement("code",null,"Model#save")," \u56de\u8c03\u4f1a\u63a5\u6536\u9519\u8bef"),t.a.createElement("li",null,"\u9a8c\u8bc1\u662f\u53ef\u5b9a\u5236\u7684")),t.a.createElement("h2",{id:"\u5185\u7f6e\u9a8c\u8bc1\u51fd\u6570"},t.a.createElement("a",{"aria-hidden":"true",href:"#\u5185\u7f6e\u9a8c\u8bc1\u51fd\u6570"},t.a.createElement("span",{className:"icon icon-link"})),"\u5185\u7f6e\u9a8c\u8bc1\u51fd\u6570"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"required"),"\uff1a\u8868\u793a\u5fc5\u586b\u5b57\u6bb5")),t.a.createElement(r.a,{code:"const schema = new Schema({\n  name: {\n    type: String,\n    // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u9519\u8bef\u63d0\u793a\u4fe1\u606f\n    required: [true, 'name is required'],\n  },\n});\n",lang:"js"}),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"min")," \u548c ",t.a.createElement("code",null,"max"),"\uff1a\u7528\u4e8e Number \u7c7b\u578b\u7684\u6570\u636e\u8bbe\u7f6e\u9650\u5236")),t.a.createElement(r.a,{code:"const schema = new Schema({\n  eggs: {\n    type: Number,\n    min: [6, 'Too few eggs'],\n    max: 12,\n  },\n});\n",lang:"js"}),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement("code",null,"enum"),"\uff1a\u679a\u4e3e\uff0c\u8868\u793a\u5c5e\u6027\u503c\u53ea\u80fd\u4e3a\u8fd9\u4e9b"),t.a.createElement("li",null,t.a.createElement("code",null,"match"),"\uff1a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f"),t.a.createElement("li",null,t.a.createElement("code",null,"maxlength"),"\uff1a\u5b57\u7b26\u4e32\u6700\u5927\u957f\u5ea6"),t.a.createElement("li",null,t.a.createElement("code",null,"minlength"),"\uff1a\u5b57\u7b26\u4e32\u6700\u5c0f\u957f\u5ea6")),t.a.createElement(r.a,{code:"const schema = new Schema({\n  drink: {\n    type: String,\n    enum: ['Coffe', 'Tea'],\n  },\n  food: {\n    type: String,\n    match: /^a/,\n    maxlength: 12,\n    minlength: 6,\n  },\n});\n",lang:"js"}),t.a.createElement("h2",{id:"\u5b9a\u5236\u5316\u9a8c\u8bc1"},t.a.createElement("a",{"aria-hidden":"true",href:"#\u5b9a\u5236\u5316\u9a8c\u8bc1"},t.a.createElement("span",{className:"icon icon-link"})),"\u5b9a\u5236\u5316\u9a8c\u8bc1"),t.a.createElement(r.a,{code:"const schema = new Schema({\n  phone: {\n    type: String,\n    validate: {\n      validator: function(data) {\n        return /\\d{3}-\\d{3}-\\d{4}/.test(data);\n      },\n      // VALUE \u4ee3\u8868 phone \u5b58\u653e\u7684\u503c\n      message: '{VALUE} is not a valid phone number',\n    },\n    required: [true, 'User phone number required'],\n  },\n});\n",lang:"js"}),t.a.createElement(r.a,{code:"const Cat = db.model('Cat', schema);\n\n// This cat has no name\nconst cat = new Cat();\n\ncat.save(function(error) {\n  assert.equal(error.errors['name'].message, 'Path `name` is required');\n\n  error = cat.validateSync();\n});\n",lang:"js"})))}}}]);